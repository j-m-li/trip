
# comment

include "../lib/std.3p"

func loop (term) {
	term_wait term 10
	if term[3] ?
		1 {
			print10 term[4]
			flush
			return 0
			print "=0A"
			print term[5]
			print "=0A"
			
		},
		0 { return 0 },
		<> {
			return -1
		};
	return 0
}

func moveto(x,y)
{
	print "=1B["
	print10 (y+1)
	print ";"
	print10 (x+1)
	print "f"
}

func color(front, back)
{
	print "=1B["
	print10 (front + 30)
	print ";"
	print10 (back + 40)
	print "m"
}

func bold()
{
	print "=1B[1m"
}

func regular()
{
	print "=1B[22m"
}

func nounderline()
{
	print "=1B[24m"
}

func underline()
{
	print "=1B[4m"
}

func normal()
{
	print "=1B[0m"
}

func query_pos()
{
	print "=1B[6n"
	flush
}


func init (term)
{
		
	print "=1B[!p"
	print "=1B[?1049h"
	print "=1B["
	print10 1 
	print ";"
	print10 (term[2]-1)
	print "r"
	print "=1B]0;Swiss-OS=07"
	
}

func toolbar (term)
{	
	moveto 0 (term[2]-1)
	bold
	color 0 1
	print "["
	color 7 1
#	underline
	print "+"
#	nounderline
	color 0 1
	print "]"
	regular
	color 7 0
	normal
	print " > h√©llo world"
	flush

}

# args[0]: command line argument count
# args[1]: array of string of each arguments
func startup (argc, argv) {
	var x
	var term

	set term {new array 10}
	term_init term

	init term

	print "width: "
	print10 term[1]
	print "=0Aheight: "
	print10 term[2]
	print "=0A"

	toolbar term
	moveto 0 0

	flush 

	set x 0
	while x ? 0 { 	# loop while x greater than 0
		set x {loop term}
	};
	print "=0ADONE!=0A"

	return 0
}


